// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.2.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CodewarsTests
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Number2Words")]
    public partial class Number2WordsFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Number2Words.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Number2Words", "\t輸入一組數字，將輸入的數字轉換成英文\r\n\thttps://www.codewars.com/kata/52724507b149fa120600031d/trai" +
                    "n/csharp", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void 輸入(string number, string word, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("輸入", exampleTags);
#line 5
this.ScenarioSetup(scenarioInfo);
#line 6
 testRunner.Given(string.Format("輸入 {0} 一組數字", number), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 7
 testRunner.When("按下轉換", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 8
 testRunner.Then(string.Format("得到 {0} .", word), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("輸入: 0")]
        public virtual void 輸入_0()
        {
#line 5
this.輸入("0", "zero", ((string[])(null)));
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("輸入: 1")]
        public virtual void 輸入_1()
        {
#line 5
this.輸入("1", "one", ((string[])(null)));
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("輸入: 3")]
        public virtual void 輸入_3()
        {
#line 5
this.輸入("3", "three", ((string[])(null)));
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("輸入: 8")]
        public virtual void 輸入_8()
        {
#line 5
this.輸入("8", "eight", ((string[])(null)));
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("輸入: 10")]
        public virtual void 輸入_10()
        {
#line 5
this.輸入("10", "ten", ((string[])(null)));
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("輸入: 15")]
        public virtual void 輸入_15()
        {
#line 5
this.輸入("15", "fifteen", ((string[])(null)));
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("輸入: 21")]
        public virtual void 輸入_21()
        {
#line 5
this.輸入("21", "twenty-one", ((string[])(null)));
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("輸入: 25")]
        public virtual void 輸入_25()
        {
#line 5
this.輸入("25", "twenty-five", ((string[])(null)));
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("輸入: 35")]
        public virtual void 輸入_35()
        {
#line 5
this.輸入("35", "thirty-five", ((string[])(null)));
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("輸入: 99")]
        public virtual void 輸入_99()
        {
#line 5
this.輸入("99", "ninety-nine", ((string[])(null)));
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("輸入: 100")]
        public virtual void 輸入_100()
        {
#line 5
this.輸入("100", "one hundred", ((string[])(null)));
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("輸入: 101")]
        public virtual void 輸入_101()
        {
#line 5
this.輸入("101", "one hundred one", ((string[])(null)));
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("輸入: 150")]
        public virtual void 輸入_150()
        {
#line 5
this.輸入("150", "one hundred fifty", ((string[])(null)));
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("輸入: 151")]
        public virtual void 輸入_151()
        {
#line 5
this.輸入("151", "one hundred fifty-one", ((string[])(null)));
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("輸入: 1000")]
        public virtual void 輸入_1000()
        {
#line 5
this.輸入("1000", "one thousand", ((string[])(null)));
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("輸入: 10000")]
        public virtual void 輸入_10000()
        {
#line 5
this.輸入("10000", "ten thousand", ((string[])(null)));
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("輸入: 100000")]
        public virtual void 輸入_100000()
        {
#line 5
this.輸入("100000", "one hundred thousand", ((string[])(null)));
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("輸入: 100002")]
        public virtual void 輸入_100002()
        {
#line 5
this.輸入("100002", "one hundred thousand two", ((string[])(null)));
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("輸入: 99999")]
        public virtual void 輸入_99999()
        {
#line 5
this.輸入("99999", "ninety-nine thousand nine hundred ninety-nine", ((string[])(null)));
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("輸入: 888888")]
        public virtual void 輸入_888888()
        {
#line 5
this.輸入("888888", "eight hundred eighty-eight thousand eight hundred eighty-eight", ((string[])(null)));
#line hidden
        }
    }
}
#pragma warning restore
#endregion
